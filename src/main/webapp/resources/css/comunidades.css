*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: Ubuntu;
}

body{
    --rede-rosa: #A239CA;
    --rede-void: white;
    --rede-roxo: #8A2BE2;
    --rede-cinza: #bbbbbb;
    --rede-branco: #0E0B16;
    --rede-void2: #0E0B16;
}

.dark-mode{
    --rede-rosa: #A239CA;
    --rede-void: #0E0B16;
    --rede-roxo: #8A2BE2;
    --rede-cinza: #bbbbbb;
    --rede-branco: white;
    --rede-void2: #0E0B16;
}

body{
    display: flex;
    height: 100vh;
    margin-left: auto;
    margin-right: auto;
    padding: 0 1vw;
    background-color: var( --rede-void);
}

.sidebar{
    border-right: 1px solid var(--rede-branco);
    flex: 0.2;
    min-width: 3vw;
    padding-left: 3vh;
    padding-right: 3vh;
    color:var( --rede-branco);
}

.icon{
    margin-top: 2vw;
    margin-bottom: 2vw;
    font-size: 2em;
}

.material-symbols-outlined, .material-icons, .sidebarOption{
    padding: 0.5vw;
}

.sidebarOption{
    display: flex;
    align-items: center;
    cursor: pointer;
}

.sidebarOption h2{
    font-weight: 800;
    font-size: 1.2em;
    margin-right: 3vw;
}

.sidebarOption:hover{
    background-color: var(--rede-cinza);
    border-radius: 30px;
    color: var( --rede-void2);
    transition: color 100ms ease-out;
}

.sidebarOption__tema:hover{
    background-color: inherit;
    color: inherit;
}

.sidebarOption.active{
    color: var(--rede-roxo);
}
.sidebarOption.active:hover{
    color: var(--rede-roxo);
    background-color: inherit;
}

.sidebar__encerrar{
    width: 100%;
    background-color: var(--rede-roxo);
    color: var( --rede-branco);
    border-radius: 3vh;
    height: 5vh;
    margin-top: 2vh;
    bottom:10%;
}

.sair{
    display: flex;
    align-items: center;
    color: var( --rede-branco);
}

.sair:link{
    text-decoration: none;
}

.feed{
    flex: 0.5;
    border-right: 1px solid var(--rede-branco);
    min-width: fit-content;
    overflow-y: scroll;
}

.feed_header{
    position: sticky;
    top: 0;
    background-color: var( --rede-void);
    z-index: 100;
    opacity: 0.8;
    padding: 1.5vh 1vw;
}

.feed_header h2{
    font-size: 2em;
    font-weight: 800;
    opacity: 1;
    color: var( --rede-branco);
}

.feed::-webkit-scrollbar{
    display: none;
}

.feed{
    -ms-overflow-style: none;
    scrollbar-width: none;
}

.caixapostagem__input img{
    border-radius: 50%;
    height: 10vh;
}

.caixaDePostagem{
    padding-bottom: 5vh;
    border-bottom: 0.8vh solid var(--rede-roxo);
    padding-right: 2vw;
}

.caixaDePostagem form{
    display: flex;
    flex-direction: column;
}

.caixapostagem__input{
    display: flex;
    padding: 2vh;
}

.caixapostagem__input input{
    flex: 1;
    margin-left: 2vw;
    font-size: 2vw;
    border: none;
    outline: none;
    color: var( --rede-branco);
    background-color: var( --rede-void);
}

.caixaDePostagem__button{
    background-color: var(--rede-roxo);
    border: none;
    color: var( --rede-branco);
    font-size: 2vh;
    font-weight: 900;
    border-radius: 30px;
    width: 13vw;
    height: 8vh;
    margin-top: 2vh;
    margin-left: auto;
}

.caixaDePostagem__button:hover{
    background-color: var(--rede-cinza);
    border-radius: 30px;
    color: var(--rede-void2);
    transition: color 100ms ease-out;
}

.post__avatar img{
    border-radius: 50%;
    height: 10vh;
}

.post{
    display: flex;
    align-items: flex-start;
    border-bottom: 1px solid var(--rede-roxo);
    padding-bottom: 2vh;
    padding-top: 1vh;
    color: var( --rede-branco);
}

.post__body img{
    width: 30vw;
    object-fit: contain;
    border-radius: 2vh;
}

.post__footer{
    display: flex;
    margin-top: 1vh;
}

.post__badge{
    font-size: 2vw !important;
    color: var( --rede-roxo);
}

.post__headerSpecial{
    font-weight: 600;
    font-size: 1.5vw;;
    color: var( --rede-cinza);
}

.post__headerText h3{
    font-size: 2vw;
    margin-bottom: 0.8vh;
}

.post__headerDescription{
    margin-bottom: 2vh;
    font-size: 1.5vw;
}

.post__body{
    flex: 1;
    padding: 0.7vh;
}

.post__avatar{
    padding: 1vw;
}


/*Adiciona border-box para o input e para os pseudo-elementos*/
input[type=checkbox], input[type=checkbox]::after, input[type=checkbox]::before {
    box-sizing: border-box;
}

/*Estiliza e remove a aparencia padrão do elemento*/
input[type=checkbox] {
    outline: none;
    position: relative;
    z-index: 1;
    margin: 2px;
    padding: 0;
    cursor: pointer;
    width: 48px;
    height: 24px;
    overflow: hidden;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

/*cria os elementos before e after*/
input[type=checkbox]::before, input[type=checkbox]::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;

    /*efeito animado*/
    transition: left .15s cubic-bezier(.25, .8, .25, .1),
                transform .15s ease-in;
}

/*Cor padrão de quando o elemento não esta selecionado*/
input[type=checkbox]::before {
    background-color: #ccc;
    width: 100%;
    height: 100%;
    border-radius: 28px;
}

/*estiliza para parecer um botão toggle*/
input[type=checkbox]::after {
    margin: 2px 0 0 2px;
    background: #fff;
    width: 20px;
    height: 20px;
    border-radius: 100%;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.4);
}

/*troca a cor se estiver com a propriedade checked no html ou o usuário "checar"*/
input[type=checkbox]:checked::before {
    background-color: var( --rede-roxo);
}

/*muda a posição do botão toggle se estiver checado*/
input[type=checkbox]:checked::after {
    left: 24px;
}

/*Efeito opcional de quando pressiona o botão*/
input[type=checkbox]:not([disabled]):active::after {
    transform: scale(1.15, 0.85);
}

/*Se o input tiver com o atributo disabled a cor é alterada*/
input[type=checkbox]:disabled::before {
     background-color: #b1b4b7 !important;
}

/*Se o input tiver com o atributo disabled a cor é alterada*/
input[type=checkbox]:disabled::after {
     background-color: #dcd8d8 !important;
}